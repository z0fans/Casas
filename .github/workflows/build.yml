name: Build and Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc

    runs-on: ${{ matrix.platform.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform.target }}

      - name: Install dependencies (Ubuntu)
        if: matrix.platform.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install frontend dependencies
        run: npm ci

      - name: Debug - List files
        run: |
          echo "Current directory:"
          pwd
          echo "Files in root:"
          ls -la
          echo "Check index.html:"
          test -f index.html && echo "index.html exists" || echo "index.html NOT found"
        shell: bash

      - name: Build application
        run: npm run tauri build -- --target ${{ matrix.platform.target }}
        env:
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}

      - name: Upload artifacts (Linux)
        if: matrix.platform.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: linux-${{ matrix.platform.target }}
          path: |
            src-tauri/target/${{ matrix.platform.target }}/release/bundle/deb/*.deb
            src-tauri/target/${{ matrix.platform.target }}/release/bundle/appimage/*.AppImage

      - name: Upload artifacts (macOS)
        if: matrix.platform.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: macos-${{ matrix.platform.target }}
          path: |
            src-tauri/target/${{ matrix.platform.target }}/release/bundle/dmg/*.dmg
            src-tauri/target/${{ matrix.platform.target }}/release/bundle/macos/*.app

      - name: Upload artifacts (Windows)
        if: matrix.platform.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: windows-${{ matrix.platform.target }}
          path: |
            src-tauri/target/${{ matrix.platform.target }}/release/bundle/msi/*.msi
            src-tauri/target/${{ matrix.platform.target }}/release/bundle/nsis/*.exe

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          generate_release_notes: true
          files: |
            artifacts/**/*.deb
            artifacts/**/*.AppImage
            artifacts/**/*.dmg
            artifacts/**/*.app
            artifacts/**/*.msi
            artifacts/**/*.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
